{"version":3,"sources":["componenets/AddCategory.js","helpers/getGifs.js","componenets/GifGridItem.js","componenets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catg","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAOjB,2BACGO,KAAK,OACLC,MAAQT,EACRU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KACd,SAAAC,GAAM,IAAD,EACD,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT3B,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEnC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,yBAAKgB,UAAU,0CACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCFHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAyBtC,OAnBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAEG,SAAAhB,GAEQM,QAAQC,IAAIP,GACZc,EAAS,CACLjB,KAAMG,EACNY,SAAS,SAM9B,CAAEtB,IAGEuB,EDrBwBI,CAAa3B,GAAhCa,EAFuB,EAE5BN,KAAYe,EAFgB,EAEhBA,QAOnB,OACI,oCACA,wBAAIJ,UAAU,uCAAuClB,GACpDsB,GAAW,sCACZ,yBAAKJ,UAAU,aAGHL,EAAOJ,KACH,SAACC,GAAD,OACA,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAAQD,UEnBzCmB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACf,kBAAC,EAAD,CAAS4B,IAAK5B,EAAUA,SAAUA,UCZ9D+B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.bd309cca.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {PropTypes} from \"prop-types\";\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState(\"\");\n    const handleInputChange = (e)=>{\n        setInputValue(e.target.value);\n    };\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(catg=> [ inputValue,...catg]);\n            setInputValue(\"\");\n        }\n\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n         <input\n            type=\"text\"\n            value= {inputValue}\n            onChange={handleInputChange}\n         />\n        </form>\n    )\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n","export const getGifs = async(category)=>{\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=UsRVpIb5suHwhJwwEYCN6DrziuX7WEM7&q=${encodeURI(category)}&limit=10`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(\n        img=>{\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        }\n    );\n    return gifs\n};","import React from 'react'\n\nexport const GifGridItem = ({id,title, url}) => {\n    console.log(id, title, url);\n    return (\n        <div className=\"card animate__animated animate__shakeX\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport {GifGridItem} from \"./GifGridItem\"\n// import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({category}) => {\n    // const [images, setImages] = useState([]); \n    const {data:images,loading} =  useFetchGifs(category);\n     // useEffect(()=>{\n    //     getGifs(category)\n    //         .then(imgs=> setImages(imgs));\n    // },[category]);\n    \n    //getGifs();\n    return (\n        <>\n        <h3 className=\"animate__animated animate__bounceIn\">{category}</h3>\n        {loading && <p>Loading</p>}\n        <div className=\"card-grid\">\n            \n                {\n                    images.map(\n                        (img)=>(\n                        <GifGridItem key={img.id} {...img}/>\n                        )\n                    )\n                }\n          \n        </div>\n        </>\n    )\n}\n","import { useState,useEffect } from \"react\"\nimport {getGifs} from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(\n\n                img=>{\n                    \n                        console.log(img)\n                        setState({\n                            data: img, \n                            loading: false\n                        })\n                    \n                }  \n            );\n        \n    }, [ category])\n\n    \n    return state;\n};\n","import React, { useState } from 'react'\nimport { AddCategory } from './componenets/AddCategory'\nimport { GifGrid } from './componenets/GifGrid'\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState([\"One Punch\"])\n\n    return (\n        <> \n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/> \n            <hr/>\n            <ol>\n                {\n                    categories.map(category=>(\n                            <GifGrid key={category} category={category}/>                           \n                    )\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}